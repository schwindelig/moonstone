@model moonstone.ui.web.Models.ViewModels.Transaction.CreateTransactionViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@Html.ValidationSummary()

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.LabelFor(m => m.Amount)
    @Html.EditorFor(m => m.Amount)
    @Html.ValidationMessageFor(m => m.Amount)

    @Html.LabelFor(m => m.CategoryId)
    @Html.EditorFor(m => m.CategoryId)
    @Html.ValidationMessageFor(m => m.CategoryId)

    @Html.LabelFor(m => m.Currency)
    @Html.EditorFor(m => m.Currency)
    @Html.ValidationMessageFor(m => m.Currency)

    @Html.LabelFor(m => m.Description)
    @Html.EditorFor(m => m.Description)
    @Html.ValidationMessageFor(m => m.Description)

    @Html.LabelFor(m => m.DestinationBankAccountId)
    @Html.EditorFor(m => m.DestinationBankAccountId)
    @Html.ValidationMessageFor(m => m.DestinationBankAccountId)

    @Html.LabelFor(m => m.IsBooked)
    @Html.EditorFor(m => m.IsBooked)
    @Html.ValidationMessageFor(m => m.IsBooked)

    @Html.LabelFor(m => m.SourceBankAccountId)
    @Html.EditorFor(m => m.SourceBankAccountId)
    @Html.ValidationMessageFor(m => m.SourceBankAccountId)

    @Html.LabelFor(m => m.Title)
    @Html.EditorFor(m => m.Title)
    @Html.ValidationMessageFor(m => m.Title)

    @Html.LabelFor(m => m.ValueDate)
    @Html.EditorFor(m => m.ValueDate)
    @Html.ValidationMessageFor(m => m.ValueDate)

    <input type="submit" value="@UIResources.Transaction_Create_Button_Create" />
}